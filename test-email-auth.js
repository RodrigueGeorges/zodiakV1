// Script pour tester l'authentification par email
import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config({ path: '.env.local' });

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testEmailAuth() {
  console.log('üîç Test de l\'authentification par email\n');

  const testEmail = 'rodrigue.etifier@gmail.com';
  const testPassword = 'TestPassword123!';

  try {
    // 1. Test d'inscription
    console.log('1Ô∏è‚É£ Test d\'inscription...');
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword
    });

    if (signUpError) {
      console.log('‚ùå Erreur d\'inscription:', signUpError.message);
    } else if (signUpData.user) {
      console.log('‚úÖ Inscription r√©ussie pour:', signUpData.user.email);
      console.log('   üìß Email de confirmation envoy√©');
    }

    // 2. Test de connexion (peut √©chouer si email non confirm√©)
    console.log('\n2Ô∏è‚É£ Test de connexion...');
    const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
      email: testEmail,
      password: testPassword
    });

    if (signInError) {
      console.log('‚ùå Erreur de connexion:', signInError.message);
      if (signInError.message.includes('Email not confirmed')) {
        console.log('   ‚ÑπÔ∏è  Normal - l\'email doit √™tre confirm√© d\'abord');
      }
    } else if (signInData.user) {
      console.log('‚úÖ Connexion r√©ussie pour:', signInData.user.email);
    }

    // 3. Test de r√©cup√©ration de mot de passe
    console.log('\n3Ô∏è‚É£ Test de r√©cup√©ration de mot de passe...');
    const { error: resetError } = await supabase.auth.resetPasswordForEmail(testEmail, {
      redirectTo: 'https://zodiak.netlify.app/login'
    });

    if (resetError) {
      console.log('‚ùå Erreur de r√©cup√©ration:', resetError.message);
    } else {
      console.log('‚úÖ Email de r√©cup√©ration envoy√©');
    }

    // 4. V√©rification de la session
    console.log('\n4Ô∏è‚É£ V√©rification de la session...');
    const { data: { session }, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.log('‚ùå Erreur de session:', sessionError.message);
    } else if (session) {
      console.log('‚úÖ Session active pour:', session.user.email);
    } else {
      console.log('‚ÑπÔ∏è  Aucune session active');
    }

  } catch (error) {
    console.error('‚ùå Erreur inattendue:', error.message);
  }
}

testEmailAuth(); 